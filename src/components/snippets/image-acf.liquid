{%- comment -%}
  Parameters
  * class
  * image
  * mobile_width - Max display width of image within mobile breakpoint
  * sm_width - Max display width of image within sm breakpoint
  * md_width - Max display width of image within md breakpoint
  * lg_width - Max display width of image within lg breakpoint
  * max_width - Max display width of image
  * object_fit
{%- endcomment -%}

{% liquid
  comment
    These variables should match the "screens" breakpoint values from tailwind.config.js
  endcomment
  assign class = class
  assign source = image.src
  assign object_fit = object_fit | default: 'object-cover'
  assign image_attributes = image_attributes
  assign image_widths = image_widths | default: '132,155,180,300,360,375,540,720,900,1080,1296,1512,1728,1944,2160,2376,2592,2808,3024' | split: ','
  assign  accentuate_cdn = '//images.accentuate.io?c_options=w_'
  capture options
    echo '&shop=' | append: shop.permanent_domain | append: '&image=' | append: source
  endcapture
  assign img_url = accentuate_cdn | append: '{width}x' | append: options
  if object_fit == 'contain'
    assign object_fit_class = 'object-contain'
  else
    assign object_fit_class = 'object-cover'
  endif
  capture image_widths
    for width in image_widths
      assign width_num = width | plus: 0 | round
      if image.width >= width_num
        echo width_num
        echo ','
      endif
    endfor
    echo image.width
  endcapture
  assign image_widths = image_widths | strip

  if image_alt == blank
    assign image_alt = image.alt
  endif
%}

{% if image %}
  <img
    class="{{ class }} {{ object_fit_class }} lazyload"
    src="{{ accentuate_cdn | append: 100 | append: options }}"
    data-src="{{- img_url -}}"
    width="{{ image.width }}"
    height="{{ image.height }}"
    data-sizes="auto"
    data-widths="[{{ image_widths }}]"
    alt="{{ image_alt }}"
  />
{% else %}
  <div data-module="image" class="{{ class }}">
    <span class="absolute inset-0 w-full h-full bg-gradient-to-br from-[#f0f0f0] to-[#9b9b9b]"></span>
  </div>
{% endif %}
